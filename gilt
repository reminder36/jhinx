-- KEY SYSTEM V2 UI LIBRARY:
-- UI by mr.xrer | Code by mstudio45

local KeySystemUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/MaGiXxScripter0/keysystemv2api/master/ui/xrer_mstudio45.lua"))()
KeySystemUI.New({
    ApplicationName = "NSHUB", -- Your Key System Application Name
    Name = "NS HUB KEY SYSTEM", -- Your Script name
    Info = "Tap Get Key and Copy it or Buy Premium", -- Info text in the GUI, keep empty for default text.
    DiscordInvite = "https://discord.gg/ZkptAdmFDg" -- Optional.
})
repeat task.wait() until KeySystemUI.Finished() or KeySystemUI.Closed
if KeySystemUI.Finished() and KeySystemUI.Closed == false then
    print("Key verified, can load script")
    local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
    local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
    local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
    
    local Window = Fluent:CreateWindow({
        Title = "PUNCH ANIME SIMULATOR | BY NAMELESS SCRIPTS | DISCORD: NSHUB " .. Fluent.Version,
        SubTitle = "",
        TabWidth = 160,
        Size = UDim2.fromOffset(580, 460),
        Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
        Theme = "Dark",
        MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
    })
    
    --Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
    local Tabs = {
        Main = Window:AddTab({ Title = "Auto Farm", Icon = "home" }),
        Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
    }
    
    local Options = Fluent.Options
    
    do
        Fluent:Notify({
            Title = "Notification",
            Content = "This is a notification",
            SubContent = "SubContent", -- Optional
            Duration = 5 -- Set to nil to make the notification not disappear
        })
    
    
    
    
        -- Start of main script block
    
        local isToggleOn = false
        local selectedValue = ""
        
        -- Dropdown creation block
        local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
            Title = "Select An Enemy to Farm",
            Values = {"Asume", "Gaare", "Madare", "Tobe", "Orochimare", "Crocodile", "Do Flamingo", "Aokeje", "Akeine", "WhiteBeard", "Gyutere", "Akeze", "Rue", "Igere", "Yoreche", "Mahite", "Toje", "Chese", "Mahorege", "Sukune", "Humanoid", "Ceo", "Frieza", "Zamase", "Broli", "Morpe", "Kishibi", "Black Mori", "Kakyon", "Deo", "Kaku", "Kizaru", "Bockman", "Shanks", "Buggy",},
            Multi = false,
            Default = 1,
        })
        
        Dropdown:SetValue("four")
        
        Dropdown:OnChanged(function(Value)
            selectedValue = Value
            print("Dropdown changed:", selectedValue)
        end)
        
        -- Toggle creation block
        local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Farm Selected Enemy", Default = false })
        
        -- Function to handle actions based on toggle state
        local function HandleToggleAction()
            while isToggleOn do
                print("Toggle changed:", Toggle.Value)
                
                if isToggleOn then
                    if selectedValue == "Asume" then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(131.486481, 14.6970425, -462.862457, -0.776537061, -8.04855418e-08, -0.63007158, -9.80191643e-08, 1, -6.93576307e-09, 0.63007158, 5.63732101e-08, -0.776537061)
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(163.932022, 14.6970425, -481.119904, -0.79358083, -5.62982621e-08, -0.608464837, -1.00962083e-07, 1, 3.91531429e-08, 0.608464837, 9.25030577e-08, -0.79358083)
                        wait(1)
                    elseif selectedValue == "Gaare" then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(167.928268, 14.6970425, -433.173401, -0.825666189, 1.01478733e-07, -0.564158916, 6.00403283e-08, 1, 9.20050311e-08, 0.564158916, 4.20931556e-08, -0.825666189)
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(202.871643, 14.6970425, -446.046356, 0.446586788, -1.14060752e-08, -0.894740343, -3.9235668e-09, 1, -1.47062655e-08, 0.894740343, 1.00781969e-08, 0.446586788)
                    elseif selectedValue == "Madare" then
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(163.007919, 22.0402203, -382.947815, -0.931776583, -3.48835538e-09, -0.363032281, -2.6508995e-09, 1, -2.80501067e-09, 0.363032281, -1.65128122e-09, -0.931776583)
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(197.087738, 22.0402203, -389.84079, -0.0467410311, 7.41750981e-08, -0.99890703, 3.87479488e-08, 1, 7.24431573e-08, 0.99890703, -3.53195304e-08, -0.0467410311)
                    elseif selectedValue == "Tobe" then
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(197.348755, 22.0402203, -331.679474, -0.81062901, -7.78164377e-08, -0.585560083, -8.01053801e-08, 1, -2.19972165e-08, 0.585560083, 2.90749309e-08, -0.81062901)
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(221.389511, 22.0402203, -362.415039, 0.84364748, 2.12124274e-09, -0.53689754, -5.13417646e-08, 1, -7.67243407e-08, 0.53689754, 9.22935612e-08, 0.84364748)
                    elseif selectedValue == "Orochimare" then
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(296.381531, 35.3379974, -372.559235, 0.79019922, 2.26380052e-08, -0.61285007, -4.63881165e-08, 1, -2.28732109e-08, 0.61285007, 4.65033558e-08, 0.79019922)
                        wait(1)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(288.734985, 35.3379974, -309.196045, -0.824342191, 3.85979035e-08, -0.566091835, 4.53824072e-08, 1, 2.09730788e-09, 0.566091835, -2.39617108e-08, -0.824342191)
                        wait(1)
                    elseif selectedValue == "Gyutere" then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1810.67078, 9.91274166, -286.904175, 0.465886027, 6.75205936e-09, 0.88484472, -1.61111675e-08, 1, 8.52024229e-10, -0.88484472, -1.46528283e-08, 0.465886027)
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1772.3313, 9.91274166, -287.48761, 0.865723193, -3.11787609e-08, -0.50052309, 3.40200543e-08, 1, -3.45000983e-09, 0.50052309, -1.40410696e-08, 0.865723193)
                            wait(1)
                    elseif selectedValue == "Akeze" then
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1766.34619, 9.91274166, -329.985168, 0.992563486, 1.96092937e-08, -0.121727996, -3.14383328e-08, 1, -9.52553805e-08, 0.121727996, 9.83739383e-08, 0.992563486)
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1729.49133, 9.91274166, -331.266724, 0.237340063, -6.83462975e-09, -0.971426606, 1.03864927e-07, 1, 1.83407369e-08, 0.971426606, -1.05250152e-07, 0.237340063)
                            wait(1)
                    elseif selectedValue == "Rue" then
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1686.6781, 9.91274166, -487.163422, 0.913778543, -2.71533587e-08, 0.406212747, 2.67555009e-08, 1, 6.65847244e-09, -0.406212747, 4.78405626e-09, 0.913778543)
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1711.7489, 9.91274166, -483.828247, 0.0177282058, -6.85700314e-08, 0.999842823, 6.6067777e-08, 1, 6.74093599e-08, -0.999842823, 6.48623484e-08, 0.0177282058)
                            wait(1)
                    elseif selectedValue == "Igere" then
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1795.57581, 23.1234837, -464.784821, -0.11514204, -3.39053985e-09, 0.993349016, 3.54723739e-09, 1, 3.8244119e-09, -0.993349016, 3.96399535e-09, -0.11514204)
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1820.77222, 23.1234837, -437.987244, -0.190012738, 1.7911173e-08, 0.981781602, -2.03299546e-08, 1, -2.21781722e-08, -0.981781602, -2.41737101e-08, -0.190012738)
                            wait(1)
                    elseif selectedValue == "Yoreche" then
                            wait(1)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1872.35364, 23.1234837, -488.735077, 0.708773851, 1.5982411e-09, 0.705435753, -2.58845727e-08, 1, 2.37414497e-08, -0.705435753, -3.5087222e-08, 0.708773851)
                    elseif selectedValue == "Mahite" then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1893.84949, 14.1206551, 1582.55664, 0.58336252, -8.29216251e-09, -0.812211931, 6.54625909e-09, 1, -5.50757795e-09, 0.812211931, -2.10403539e-09, 0.58336252)
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1874.13635, 14.1206551, 1611.46875, 0.377354145, 3.34361978e-08, -0.926069021, -2.4608152e-08, 1, 2.60781974e-08, 0.926069021, 1.29481315e-08, 0.377354145)
                                wait(1)
                    elseif selectedValue == "Toje" then
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1815.28833, 14.1206551, 1587.59229, 0.173226029, 5.06971034e-08, -0.984882116, -3.60569494e-08, 1, 4.51334259e-08, 0.984882116, 2.76935577e-08, 0.173226029)
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1843.349, 14.1206551, 1561.3811, 0.637280583, -5.69102987e-08, 0.77063185, 4.50197923e-08, 1, 3.66193795e-08, -0.77063185, 1.13568674e-08, 0.637280583)
                                wait(1)
                    elseif selectedValue == "Chese" then
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1737.48242, 23.8696232, 1601.75708, 0.270422935, -2.85628552e-08, -0.962741613, -7.38035633e-09, 1, -3.17413011e-08, 0.962741613, 1.56889524e-08, 0.270422935)
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1721.17212, 23.8696232, 1651.1626, -0.663312495, -1.28521016e-09, -0.748342514, -1.06395071e-09, 1, -7.74348974e-10, 0.748342514, 2.82564222e-10, -0.663312495)
                                wait(1)
                    elseif selectedValue == "Mahorege" then
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1762.07654, 41.6863899, 1739.29712, -0.919261932, 6.84583981e-08, -0.393646419, 5.41063905e-08, 1, 4.75565258e-08, 0.393646419, 2.24181171e-08, -0.919261932)
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1798.9834, 41.6863899, 1748.28003, -0.565357387, -7.13111419e-08, 0.824846089, -8.10937095e-08, 1, 3.0871476e-08, -0.824846089, -4.94364123e-08, -0.565357387)
                                wait(1)
                    elseif selectedValue == "Sukune" then
                                wait(1)
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1879.13525, 41.9984093, 1799.91797, -0.131175935, 7.07417769e-08, 0.991359115, 7.80402232e-08, 1, -6.10321536e-08, -0.991359115, 6.93599347e-08, -0.131175935)
                                wait(1)
                    elseif selectedValue == "Humanoid" then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0757.020508, 22.1703148, -2577.63208, -0.0258174688, 5.04987767e-08, 0.999666691, 5.03500708e-08, 1, -4.92152701e-08, -0.999666691, 4.90626739e-08, -0.0258174688)
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(721.961243, 22.1703148, -2550.29834, 0.302576274, 5.12041609e-08, 0.953125179, -8.43263166e-08, 1, -2.69524083e-08, -0.953125179, -7.22183771e-08, 0.302576274)
                                    wait(1)
                                elseif selectedValue == "Ceo" then
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(676.780762, 13.3949356, -2515.06934, -0.680148721, -6.14454709e-09, 0.733074129, 3.39911765e-10, 1, 8.69726158e-09, -0.733074129, 6.16461193e-09, -0.680148721)
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(656.489441, 13.3949327, -2537.16748, 0.742520154, -4.30150049e-09, 0.669823706, 8.33558644e-09, 1, -2.8184135e-09, -0.669823706, 7.67610242e-09, 0.742520154)
                                    wait(1)
                                elseif selectedValue == "Frieza" then
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(613.647888, 13.3949327, -2521.34839, -0.509420514, -1.92179179e-08, 0.860517681, -2.93578903e-08, 1, 4.95330399e-09, -0.860517681, -2.27396697e-08, -0.509420514)
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(643.691589, 13.3949337, -2498.2627, -0.834166288, -5.79031614e-08, -0.551513016, -1.83483806e-08, 1, -7.72376367e-08, 0.551513016, -5.43096625e-08, -0.834166288)
                                    wait(1)
                                elseif selectedValue == "Zamase" then
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(539.73175, 22.1703148, -2495.53662, 0.195150614, 1.14009779e-07, 0.98077327, -1.04494644e-08, 1, -1.14165587e-07, -0.98077327, 1.20309291e-08, 0.195150614)
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(506.201202, 22.1703148, -2500.70679, 0.248768061, 6.26270733e-08, 0.96856308, 6.58492594e-09, 1, -6.63510633e-08, -0.96856308, 2.28839419e-08, 0.248768061)
                                    wait(1)
                                elseif selectedValue == "Broli" then
                                    wait(1)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(463.431396, 22.1703205, -2472.33105, -0.493587196, -7.60146577e-08, 0.869696319, 2.18154685e-08, 1, 9.97848204e-08, -0.869696319, 6.822534e-08, -0.493587196)
                                    wait(1)
                                elseif selectedValue == "Morpe" then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1721.04138, 34.1585922, -2437.25269, -0.751124144, -4.45310067e-10, -0.660160959, -4.666183e-09, 1, 4.6345856e-09, 0.660160959, 6.56158106e-09, -0.751124144)
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1691.021, 34.1585922, -2396.32056, -0.594280601, 1.73919634e-09, -0.804257751, -4.59027554e-08, 1, 3.60808627e-08, 0.804257751, 5.83598059e-08, -0.594280601)
                                        wait(1)
                                    elseif selectedValue == "Kishibi" then
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1665.43726, 34.1585922, -2422.07129, 0.509942949, -2.60038724e-09, -0.860208213, 3.07008108e-08, 1, 1.51768766e-08, 0.860208213, -3.41484316e-08, 0.509942949)
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1640.34204, 34.1585922, -2472.56519, 0.997108459, 2.00514538e-08, -0.0759918764, -1.72279275e-08, 1, 3.78111871e-08, 0.0759918764, -3.63926702e-08, 0.997108459)
                                        wait(1)
                                    elseif selectedValue == "Black Mori" then
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1588.08447, 22.8785324, -2482.20874, 0.129969776, -3.59878349e-08, -0.991517961, -3.565511e-09, 1, -3.6763069e-08, 0.991517961, 8.31335623e-09, 0.129969776)
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1560.23938, 22.8785324, -2453.12134, -0.420362949, 8.70130634e-10, -0.907356024, 1.06113146e-10, 1, 9.09813336e-10, 0.907356024, 2.86169421e-10, -0.420362949)
                                        wait(1)
                                    elseif selectedValue == "Kakyon" then
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1497.79419, 22.8785324, -2481.53589, -0.104260772, -5.63078428e-09, -0.99454999, -3.2575056e-09, 1, -5.32014921e-09, 0.99454999, 2.68506928e-09, -0.104260772)
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1446.45837, 22.8785324, -2510.34814, -0.0727167949, 4.66555683e-08, -0.9973526, 6.59660913e-08, 1, 4.19698338e-08, 0.9973526, -6.27395451e-08, -0.0727167949)
                                        wait(1)
                                    elseif selectedValue == "Deo" then
                                        wait(1)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1333.4137, 34.5199623, -2511.46826, 0.187842086, 4.1258847e-08, -0.982199252, -2.4127079e-08, 1, 3.7392379e-08, 0.982199252, 1.66737362e-08, 0.187842086)
                                        wait(1)
                                    elseif selectedValue == "Kaku" then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3989.56494, 12.3252487, 1752.25354, -0.762289286, -2.6376215e-08, 0.647236466, -6.14885209e-09, 1, 3.35101795e-08, -0.647236466, 2.15646896e-08, -0.762289286)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3957.85181, 12.3145256, 1734.15881, 0.397051394, 4.26729763e-09, -0.917796373, -4.899674e-09, 1, 2.52983723e-09, 0.917796373, 3.49242768e-09, 0.397051394)
                                    elseif selectedValue == "Kizaru" then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3928.20264, 12.3145256, 1794.23193, -0.808545291, 1.76936332e-08, -0.588433921, -9.84851845e-09, 1, 4.36015064e-08, 0.588433921, 4.10489953e-08, -0.808545291)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3897.09912, 12.3145256, 1790.89453, -0.0134123964, -5.63604345e-08, -0.999910057, 7.19419262e-08, 1, -5.73305066e-08, 0.999910057, -7.27043954e-08, -0.0134123964)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3911.59375, 12.3145266, 1844.94849, -0.687367558, 4.7074864e-09, 0.726309717, -1.93484873e-09, 1, -8.31248492e-09, -0.726309717, -7.11903203e-09, -0.687367558)
                                    elseif selectedValue == "Bockman" then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3873.2439, 12.3145256, 1851.72266, 0.483164281, 2.46515874e-08, -0.875529706, -6.12736812e-08, 1, -5.65790881e-09, 0.875529706, 5.63806282e-08, 0.483164281)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3891.34326, 12.3145256, 1877.11865, -0.939634085, 5.6225538e-08, 0.342180967, 2.87020399e-08, 1, -8.54989821e-08, -0.342180967, -7.05164709e-08, -0.939634085)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3918.11621, 12.3371086, 1903.74609, -0.740270138, 1.46776529e-08, 0.672309518, -5.64722624e-09, 1, -2.8049767e-08, -0.672309518, -2.45610892e-08, -0.740270138)
                                    elseif selectedValue == "Shanks" then
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3818.29053, 12.3145256, 1850.56787, 0.580695808, -4.74663295e-08, -0.814120591, 1.06571392e-07, 1, 1.77114181e-08, 0.814120591, -9.70469074e-08, 0.580695808)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3813.56836, 12.3982859, 1789.92664, 0.997384906, -3.0546861e-08, -0.0722726509, 3.30034489e-08, 1, 3.27963932e-08, 0.0722726509, -3.50958764e-08, 0.997384906)
                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3768.74854, 12.3145256, 1851.35803, -0.369393855, 1.60017533e-09, -0.92927295, -9.00669761e-09, 1, 5.30220312e-09, 0.92927295, 1.03282813e-08, -0.369393855)
                                    elseif selectedValue == "Buggy" then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3839.15942, 12.4403629, 1887.62939, -0.931581736, -5.73627119e-08, 0.363531888, -1.9455932e-08, 1, 1.07935286e-07, -0.363531888, 9.34776949e-08, -0.931581736)
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3871.4541, 12.3145256, 1912.48962, -0.858871102, -4.81106177e-08, 0.512191772, -4.13003889e-08, 1, 2.46761207e-08, -0.512191772, 3.98882281e-11, -0.858871102)
                                        -- Add more cases for other dropdown values if needed
                    else
                        print("Toggle is ON and unexpected option selected")
                    end
                end
                
                wait()
            end
        end
        
        Toggle:OnChanged(function(value)
            isToggleOn = value
            print("Toggle is now:", isToggleOn)
            
            if isToggleOn then
                -- Start the toggle action in a new thread to not block the UI
                spawn(HandleToggleAction)
            end
        end)
        
        if Toggle.Value then
            -- Start the toggle action initially
            spawn(HandleToggleAction)
        end
    
        local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Gain Power", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "Attack",
                [2] = "Click",
                [3] = {
                    ["Type"] = "RaidBoss"
                }
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait()
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
        Tabs.Main:AddButton({
            Title = "AUTO CLICKER",
            Description = "Very important button",
            Callback = function()
                Window:Dialog({
                    Title = "Tap Confirm to Use",
                    Content = "This is a dialog",
                    Buttons = {
                        {
                            Title = "Confirm",
                            Callback = function()
                                loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-Auto-Clicker-Gui-9115"))()
                                print("Confirmed the dialog.")
                            end
                        },
                        {
                            Title = "Cancel",
                            Callback = function()
                                print("Cancelled the dialog.")
                            end
                        }
                    }
                })
            end
        })
    
        local Tabs = {
            Main = Window:AddTab({ Title = "EGG | PETS", Icon = "egg" }),
        }
    
    local isToggleOn = false
    local selectedValue = ""
    
    -- Dropdown creation block
    local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
        Title = "Select An Pet to Hatch",
        Values = {"LEAF CITY", "DESERT PIECE", "SLAYER VILLAGE", "CURSED ACADEMY", "DRAGON CITY", "BIZZARE ISLAND", "CLOWN ISLAND", "CLOVER ISLAND", "HUNTER ISLAND", "CRIMINAL ISLAND",},
        Multi = false,
        Default = 1,
    })
    
    Dropdown:SetValue("four")
    
    Dropdown:OnChanged(function(Value)
        selectedValue = Value
        print("Dropdown changed:", selectedValue)
    end)
    
    -- Toggle creation block
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Farm Selected Enemy", Default = false })
    
    -- Function to handle actions based on toggle state
    local function HandleToggleAction()
        while isToggleOn do
            print("Toggle changed:", Toggle.Value)
            
            if isToggleOn then
                if selectedValue == "LEAF CITY" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Leaf City",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))          
                elseif selectedValue == "DESERT PIECE" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Desert Piece",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "SLAYER VILLAGE" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Slayer Village",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "CURSED ACADEMY" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Cursed Academy",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "DRAGON CITY" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Dragon City",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "BIZZARE ISLAND" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Bizarre Island",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "CLOWN ISLAND" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Clown Island",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "CLOVER ISLAND" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Clover Village",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                elseif selectedValue == "HUNTER ISLAND" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Hunter Island",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))          
                elseif selectedValue == "CRIMINAL ISLAND" then
                    local args = {
                        [1] = "Stars",
                        [2] = "Roll",
                        [3] = {
                            ["Map"] = "Criminal Village",
                            ["Type"] = "Open"
                        }
                    }
                    
                    game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
                        -- Add more cases for other dropdown values if needed
                else
                    print("Toggle is ON and unexpected option selected")
                end
            end
            
            wait()
        end
    end
    
    Toggle:OnChanged(function(value)
        isToggleOn = value
        print("Toggle is now:", isToggleOn)
        
        if isToggleOn then
            -- Start the toggle action in a new thread to not block the UI
            spawn(HandleToggleAction)
        end
    end)
    
    if Toggle.Value then
        -- Start the toggle action initially
        spawn(HandleToggleAction)
    end
    
    local Tabs = {
        Main = Window:AddTab({ Title = "Misc", Icon = "star" }),
    }
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Rank Up", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "RankUp",
                [2] = "Evolve"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))         
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Aura", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "Auras",
                [2] = "Evolve"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(5)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Potion", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "PotionsMachine",
                [2] = "Buy"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait()
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle(10)
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Marks", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "Marks",
                [2] = "Buy"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Cursed", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "CurseMachine",
                [2] = "Buy"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Fruit", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "FruitMachine",
                [2] = "Buy"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Race", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "RaceMachine",
                [2] = "Buy"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Energy Capsule", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "Marketplace",
                [2] = "Product",
                [3] = {
                    ["Name"] = "1 Energy Capsule"
                }
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()
    
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Buy Criticals", Default = false })
    local function checkToggle()
        while Toggle.Value do
            local args = {
                [1] = "Criticals",
                [2] = "Evolve"
            }
            
            game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
            print("Toggle changed:", Options.MyToggle.Value)
            wait(10)
        end
    end
    
    Toggle:OnChanged(checkToggle)
    checkToggle()

local Tabs = {
    Main = Window:AddTab({ Title = "Raid", Icon = "alert-triangle" }),
}

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Join Raid", Default = false })
local function checkToggle()
    while Toggle.Value do
        local args = {
            [1] = "Enemies",
            [2] = "Bridge",
            [3] = {
                ["Module"] = "Raid",
                ["FunctionName"] = "Join",
                ["Args"] = ""
            }
        }
        
        game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))
        print("Toggle changed:", Options.MyToggle.Value)
        wait(20)
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Start Raid", Default = false })
local function checkToggle()
    while Toggle.Value do
        local args = {
            [1] = "Enemies",
            [2] = "Bridge",
            [3] = {
                ["Module"] = "Raid",
                ["FunctionName"] = "Start",
                ["Args"] = "Public"
            }
        }
        
        game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))            
        print("Toggle changed:", Options.MyToggle.Value)
        wait(20)
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Clear Raid", Default = false })
local function checkToggle()
    while Toggle.Value do
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9567.0918, 18.6741371, -349.979431, 0.362289816, 7.38829513e-08, 0.932065487, 2.30308235e-08, 1, -8.82199629e-08, -0.932065487, 5.34274314e-08, 0.362289816)
            wait(1.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9538.94727, 18.6741352, -349.342163, -0.0203616638, 8.00212945e-08, 0.999792695, -3.3751002e-09, 1, -8.01066236e-08, -0.999792695, -5.0055049e-09, -0.0203616638)
            wait(1.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9534.05078, 18.6741352, -316.029602, -0.997052372, 5.90519011e-09, 0.0767242685, -1.16715504e-09, 1, -9.21338881e-08, -0.0767242685, -9.19518541e-08, -0.997052372)
            wait(1.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9562.55176, 18.6741352, -313.112457, -0.202777788, 4.7575643e-08, -0.979224801, 3.36873329e-09, 1, 4.78874114e-08, 0.979224801, 6.41175602e-09, -0.202777788)
            wait(1.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9550.41504, 18.674139, -332.621948, 0.0935957655, -4.94077312e-08, 0.995610297, -3.60572905e-08, 1, 5.30152633e-08, -0.995610297, -4.08610141e-08, 0.0935957655)
            wait(1.5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(9514.26465, 18.467289, -332.472839, -0.010218964, -2.73268874e-08, 0.999947786, 4.2705614e-10, 1, 2.73326783e-08, -0.999947786, 7.06345482e-10, -0.010218964)
            wait(3)
        print("Toggle changed:", Options.MyToggle.Value)
        wait()
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Tabs = {
    Main = Window:AddTab({ Title = "Defense", Icon = "shield-check" }),
}

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Join Defense", Default = false })
local function checkToggle()
    while Toggle.Value do
        local args = {
            [1] = "Enemies",
            [2] = "Bridge",
            [3] = {
                ["Module"] = "Defense",
                ["FunctionName"] = "Join",
                ["Args"] = ""
            }
        }
        
        game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))
        print("Toggle changed:", Options.MyToggle.Value)
        wait()
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Tabs = {
    Main = Window:AddTab({ Title = "Invasion", Icon = "flag" }),
}

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Join Invasion Ship", Default = false })
local function checkToggle()
    while Toggle.Value do
        local args = {
            [1] = "Enemies",
            [2] = "Bridge",
            [3] = {
                ["Module"] = "InvasionShip",
                ["FunctionName"] = "Join",
                ["Args"] = ""
            }
        }
        
        game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))
        print("Toggle changed:", Options.MyToggle.Value)
        wait()
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Start Ship", Default = false })
local function checkToggle()
    while Toggle.Value do
        local args = {
            [1] = "Enemies",
            [2] = "Bridge",
            [3] = {
                ["Module"] = "InvasionShip",
                ["FunctionName"] = "Start",
                ["Args"] = "Friend"
            }
        }
        
        game:GetService("ReplicatedStorage").Bridge:FireServer(unpack(args))        
        print("Toggle changed:", Options.MyToggle.Value)
        wait(20)
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()

local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Auto Clear Invasion Ship", Default = false })
local function checkToggle()
    while Toggle.Value do
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4113.89697, 2708.87402, 1883.49341, -0.864811063, 4.99793806e-08, 0.502097428, 8.91394691e-08, 1, 5.39923484e-08, -0.502097428, 9.1449877e-08, -0.864811063)
        wait(1.9)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4142.3418, 2708.87231, 1829.8938, 0.588108957, -2.58481148e-08, 0.808781683, 1.08005665e-07, 1, -4.65774477e-08, -0.808781683, 1.14745617e-07, 0.588108957)
        wait(1.9)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4149.98096, 2708.87305, 1866.08801, -0.938965678, 2.25841514e-08, 0.34401077, 3.74313771e-08, 1, 3.65181272e-08, -0.34401077, 4.71660648e-08, -0.938965678)
        wait(1.9)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4182.40967, 2708.87305, 1850.79761, 0.425958365, 1.96520777e-09, 0.904742777, 1.01826338e-07, 1, -5.01125719e-08, -0.904742777, 1.1347251e-07, 0.425958365)
        wait(1.9)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4162.52979, 2708.87402, 1904.73767, -0.959181666, -6.5302153e-08, -0.282790571, -4.91115486e-08, 1, -6.43418048e-08, 0.282790571, -4.78271964e-08, -0.959181666)
        wait(1.9)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-4203.40479, 2708.87402, 1892.48865, 0.286721408, 4.49703208e-08, 0.958014011, 5.78725263e-08, 1, -6.42617053e-08, -0.958014011, 7.38678949e-08, 0.286721408)
        wait(3)
        print("Toggle changed:", Options.MyToggle.Value)
        wait()
    end
end

Toggle:OnChanged(checkToggle)
checkToggle()


    local Colorpicker = Tabs.Main:AddColorpicker("Colorpicker", {
        Title = "Colorpicker",
        Default = Color3.fromRGB(96, 205, 255)
    })

    Colorpicker:OnChanged(function()
        print("Colorpicker changed:", Colorpicker.Value)
    end)
    
    Colorpicker:SetValueRGB(Color3.fromRGB(0, 255, 140))



    local TColorpicker = Tabs.Main:AddColorpicker("TransparencyColorpicker", {
        Title = "Colorpicker",
        Description = "but you can change the transparency.",
        Transparency = 0,
        Default = Color3.fromRGB(96, 205, 255)
    })

    TColorpicker:OnChanged(function()
        print(
            "TColorpicker changed:", TColorpicker.Value,
            "Transparency:", TColorpicker.Transparency
        )
    end)



    local Keybind = Tabs.Main:AddKeybind("Keybind", {
        Title = "KeyBind",
        Mode = "Toggle", -- Always, Toggle, Hold
        Default = "LeftControl", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

        -- Occurs when the keybind is clicked, Value is `true`/`false`
        Callback = function(Value)
            print("Keybind clicked!", Value)
        end,

        -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
        ChangedCallback = function(New)
            print("Keybind changed!", New)
        end
    })

    -- OnClick is only fired when you press the keybind and the mode is Toggle
    -- Otherwise, you will have to use Keybind:GetState()
    Keybind:OnClick(function()
        print("Keybind clicked:", Keybind:GetState())
    end)

    Keybind:OnChanged(function()
        print("Keybind changed:", Keybind.Value)
    end)

    task.spawn(function()
        while true do
            wait(1)

            -- example for checking if a keybind is being pressed
            local state = Keybind:GetState()
            if state then
                print("Keybind is being held down")
            end

            if Fluent.Unloaded then break end
        end
    end)

    Keybind:SetValue("MB2", "Toggle") -- Sets keybind to MB2, mode to Hold


    local Input = Tabs.Main:AddInput("Input", {
        Title = "Input",
        Default = "Default",
        Placeholder = "Placeholder",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(Value)
            print("Input changed:", Value)
        end
    })

    Input:OnChanged(function()
        print("Input updated:", Input.Value)
    end)
end


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
else
    print("Player closed the GUI.")
end
